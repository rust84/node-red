[{"id":"e11e5cc9.86044","type":"tab","label":"hubitat-hass-mqtt","disabled":false,"info":""},{"id":"bac19a08.b37048","type":"mqtt-broker","name":"hassio","broker":"vernemq-headless","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"a31891f1.ebdd5","type":"websocket-client","path":"ws://10.20.0.22/eventsocket","tls":"","wholemsg":"false"},{"id":"2eabb86f.b6d2e8","type":"http in","z":"e11e5cc9.86044","name":"","url":"/mqttweb/push/:platform","method":"post","upload":false,"swaggerDoc":"","x":240,"y":300,"wires":[["d27f0ebf.c644d","7ba40fbb.ba607"]]},{"id":"d27f0ebf.c644d","type":"debug","z":"e11e5cc9.86044","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":500,"y":200,"wires":[]},{"id":"f0fe5418.643ac8","type":"http response","z":"e11e5cc9.86044","name":"","statusCode":"200","headers":{},"x":840,"y":300,"wires":[]},{"id":"56c10ae9.29c154","type":"mqtt out","z":"e11e5cc9.86044","name":"","topic":"","qos":"","retain":"","broker":"bac19a08.b37048","x":830,"y":500,"wires":[]},{"id":"7ba40fbb.ba607","type":"change","z":"e11e5cc9.86044","name":"Prepare MQTT Message","rules":[{"t":"set","p":"topic","pt":"msg","to":"$join([$string($flowContext(\"config.mqtt_prefix\")),$string(payload.platform),$string(payload.device),$string(payload.attribute),$string($flowContext(\"config.mqtt_state_suffix\"))], '/')","tot":"jsonata"},{"t":"set","p":"payload","pt":"msg","to":"payload.state","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":490,"y":380,"wires":[["56c10ae9.29c154","64575041.7ed59"]]},{"id":"6af32e8f.c187b","type":"catch","z":"e11e5cc9.86044","name":"","scope":["2eabb86f.b6d2e8","56c10ae9.29c154","7ba40fbb.ba607"],"uncaught":false,"x":830,"y":360,"wires":[["5e5922a.5f91bdc","5fb2b4bd.e212dc"]]},{"id":"5e5922a.5f91bdc","type":"http response","z":"e11e5cc9.86044","name":"","statusCode":"500","headers":{},"x":980,"y":340,"wires":[]},{"id":"3b5374a9.50ab8c","type":"comment","z":"e11e5cc9.86044","name":"New event push from web","info":"Section that makes an endpoint to push new MQTT messages to from the web. \n\n\nExpects the format:\n```\n{ \"platform\": \"hubitat\",\n \"device\": \"MYDEVICE01\",\n \"attribute\": \"motion\",\n \"state\": \"active\"\n}\n```","x":190,"y":140,"wires":[]},{"id":"29e6679.4ea0e98","type":"http in","z":"e11e5cc9.86044","name":"","url":"/mqttweb/get","method":"get","upload":false,"swaggerDoc":"","x":230,"y":760,"wires":[["16203c17.e17d14"]]},{"id":"8e09af6f.fb39","type":"mqtt in","z":"e11e5cc9.86044","name":"","topic":"homeassistant/+/+/+/cmd","qos":"2","datatype":"auto","broker":"bac19a08.b37048","x":210,"y":900,"wires":[["46ddf620.cb4258"]]},{"id":"4ca69b81.158354","type":"comment","z":"e11e5cc9.86044","name":"Retrieve Commands from MQTT","info":"","x":250,"y":820,"wires":[]},{"id":"46ddf620.cb4258","type":"switch","z":"e11e5cc9.86044","name":"","property":"$split(topic,\"/\")[1]","propertyType":"jsonata","rules":[{"t":"eq","v":"smartthings","vt":"str"},{"t":"eq","v":"hubitat","vt":"str"},{"t":"eq","v":"homeassistant","vt":"str"},{"t":"eq","v":"blueiris","vt":"str"},{"t":"else"}],"checkall":"false","repair":false,"outputs":5,"x":410,"y":900,"wires":[[],["681ebfda.1fb37"],[],[],[]],"outputLabels":["smartthings","hubitat","homeassistant","","other"]},{"id":"681ebfda.1fb37","type":"link out","z":"e11e5cc9.86044","name":"MQTT to Hubitat Output","links":["7c34150.2b240ec"],"x":675,"y":880,"wires":[]},{"id":"4e67d0c1.fab4b","type":"link in","z":"e11e5cc9.86044","name":"MQTT Output","links":["8947dadf.ddbf98","7d9f56e0.67f6b8","13d3c936.1760d7"],"x":575,"y":500,"wires":[["65a699cd.dff688","56c10ae9.29c154"]]},{"id":"9ede2964.dfa858","type":"http in","z":"e11e5cc9.86044","name":"","url":"/mqttweb/discovery/:platform","method":"post","upload":false,"swaggerDoc":"","x":220,"y":600,"wires":[["ed90d25c.72b64","7b465094.f4b2c","661dac9d.071044"]]},{"id":"ad3454a3.2c2a28","type":"switch","z":"e11e5cc9.86044","name":"","property":"req.params.platform","propertyType":"msg","rules":[{"t":"eq","v":"smartthings","vt":"str"},{"t":"eq","v":"hubitat","vt":"str"},{"t":"eq","v":"homeassistant","vt":"str"},{"t":"eq","v":"blueiris","vt":"str"},{"t":"else"}],"checkall":"false","repair":false,"outputs":5,"x":610,"y":660,"wires":[[],["576c1825.e347a8"],[],["7f473641.306398"],[]],"outputLabels":["smartthings","hubitat","homeassistant","","other"]},{"id":"6e94c4bb.8eac7c","type":"link out","z":"e11e5cc9.86044","name":"Hubitat Discovery to Home Assistant","links":["dd4dd4ac.2c5db8"],"x":1155,"y":680,"wires":[]},{"id":"ed90d25c.72b64","type":"change","z":"e11e5cc9.86044","name":"","rules":[{"t":"set","p":"config","pt":"msg","to":"config","tot":"flow"}],"action":"","property":"","from":"","to":"","reg":false,"x":400,"y":680,"wires":[["ad3454a3.2c2a28"]]},{"id":"65a699cd.dff688","type":"debug","z":"e11e5cc9.86044","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":670,"y":540,"wires":[]},{"id":"3ab65565.c5ff8a","type":"link in","z":"e11e5cc9.86044","name":"Web Bridge Discovery Input","links":["639f2b68.9ce224","94fd5f0e.ae487","ec578f61.a2ad"],"x":235,"y":660,"wires":[["ed90d25c.72b64"]]},{"id":"7f473641.306398","type":"change","z":"e11e5cc9.86044","name":"","rules":[{"t":"set","p":"config.devicePrefix","pt":"msg","to":"BI","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":860,"y":700,"wires":[["6e94c4bb.8eac7c"]]},{"id":"576c1825.e347a8","type":"change","z":"e11e5cc9.86044","name":"","rules":[{"t":"set","p":"config.devicePrefix","pt":"msg","to":"HE","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":840,"y":620,"wires":[["6e94c4bb.8eac7c"]]},{"id":"661dac9d.071044","type":"debug","z":"e11e5cc9.86044","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":710,"y":780,"wires":[]},{"id":"7b465094.f4b2c","type":"http response","z":"e11e5cc9.86044","name":"","statusCode":"200","headers":{},"x":520,"y":580,"wires":[]},{"id":"16203c17.e17d14","type":"http response","z":"e11e5cc9.86044","name":"","statusCode":"200","headers":{},"x":500,"y":760,"wires":[]},{"id":"2163e298.ea0d6e","type":"comment","z":"e11e5cc9.86044","name":"Device Discovery","info":"","x":160,"y":560,"wires":[]},{"id":"654506a4.a841f8","type":"link in","z":"e11e5cc9.86044","name":"MQQT Event Push Input","links":["c0de8858.a585d8"],"x":175,"y":420,"wires":[["7ba40fbb.ba607"]]},{"id":"64575041.7ed59","type":"switch","z":"e11e5cc9.86044","name":"Check for request","property":"res","propertyType":"msg","rules":[{"t":"nnull"}],"checkall":"true","repair":false,"outputs":1,"x":630,"y":300,"wires":[["f0fe5418.643ac8"]]},{"id":"5fb2b4bd.e212dc","type":"debug","z":"e11e5cc9.86044","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1050,"y":400,"wires":[]},{"id":"b5929d1d.39356","type":"websocket in","z":"e11e5cc9.86044","name":"Hubitat Event Stream","server":"","client":"a31891f1.ebdd5","x":220,"y":1200,"wires":[["8fc62ecc.3d1e7"]]},{"id":"8fc62ecc.3d1e7","type":"json","z":"e11e5cc9.86044","name":"","property":"payload","action":"obj","pretty":false,"x":410,"y":1200,"wires":[["ac6446c6.aaa648","ff37c0f3.be6c8"]]},{"id":"40898af6.79bec4","type":"change","z":"e11e5cc9.86044","name":"convert event to our format","rules":[{"t":"set","p":"event","pt":"msg","to":"payload","tot":"msg"},{"t":"set","p":"payload","pt":"msg","to":"{}","tot":"json"},{"t":"set","p":"payload.device","pt":"msg","to":"event.deviceId","tot":"msg"},{"t":"set","p":"payload.attribute","pt":"msg","to":"event.name","tot":"msg"},{"t":"set","p":"payload.state","pt":"msg","to":"event.value","tot":"msg"},{"t":"set","p":"payload.platform","pt":"msg","to":"hubitat","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":740,"y":1200,"wires":[["c0de8858.a585d8"]]},{"id":"ac6446c6.aaa648","type":"switch","z":"e11e5cc9.86044","name":"","property":"payload.source","propertyType":"msg","rules":[{"t":"eq","v":"DEVICE","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":550,"y":1200,"wires":[["40898af6.79bec4"]]},{"id":"c0de8858.a585d8","type":"link out","z":"e11e5cc9.86044","name":"Hubitat Event Stream Post Conversion","links":["654506a4.a841f8"],"x":895,"y":1200,"wires":[]},{"id":"4301e260.33336c","type":"http request","z":"e11e5cc9.86044","name":"","method":"GET","ret":"txt","url":"","tls":"","x":370,"y":1360,"wires":[["b4fc88a5.c9ddb8"]]},{"id":"1f91c139.7e43bf","type":"change","z":"e11e5cc9.86044","name":"","rules":[{"t":"set","p":"req.params.platform","pt":"msg","to":"hubitat","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":740,"y":1360,"wires":[["ec578f61.a2ad"]]},{"id":"ec578f61.a2ad","type":"link out","z":"e11e5cc9.86044","name":"Hubitat Discovery Flow Out","links":["3ab65565.c5ff8a"],"x":915,"y":1360,"wires":[]},{"id":"a261cea3.ad907","type":"inject","z":"e11e5cc9.86044","name":"","repeat":"300","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":110,"y":1380,"wires":[["a7744bb3.3151a8"]]},{"id":"44225814.e45b68","type":"debug","z":"e11e5cc9.86044","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":670,"y":1520,"wires":[]},{"id":"b4fc88a5.c9ddb8","type":"json","z":"e11e5cc9.86044","name":"","property":"payload","action":"obj","pretty":false,"x":510,"y":1360,"wires":[["1f91c139.7e43bf","44225814.e45b68"]]},{"id":"877856ef.c683d8","type":"comment","z":"e11e5cc9.86044","name":"Websocket Event to MQTT","info":"May need to change your websocket definition if your hub has a different id or you don't have a dns server","x":230,"y":1140,"wires":[]},{"id":"2722342a.26c4cc","type":"comment","z":"e11e5cc9.86044","name":"Discover via Maker API","info":"","x":200,"y":1320,"wires":[]},{"id":"7c34150.2b240ec","type":"link in","z":"e11e5cc9.86044","name":"MQTT to Hubitat Input","links":["681ebfda.1fb37"],"x":275,"y":1620,"wires":[["642f1c12.062d94"]]},{"id":"4eb788dd.5f2408","type":"comment","z":"e11e5cc9.86044","name":"Execute MQTT Commands","info":"","x":250,"y":1560,"wires":[]},{"id":"222d8cd7.909644","type":"debug","z":"e11e5cc9.86044","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1010,"y":1560,"wires":[]},{"id":"642f1c12.062d94","type":"change","z":"e11e5cc9.86044","name":"","rules":[{"t":"set","p":"deviceID","pt":"msg","to":"$split(topic, '/')[2]","tot":"jsonata"},{"t":"set","p":"attribute","pt":"msg","to":"$split(topic, '/')[3]","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":420,"y":1640,"wires":[["c059a9ca.334578"]]},{"id":"408f680d.db2838","type":"change","z":"e11e5cc9.86044","name":"","rules":[{"t":"set","p":"url","pt":"msg","to":"$join(\t [\t \"http:/\",\t $flowContext(\"hubitat_ip\"),\t \"apps/api\",\t $flowContext(\"hubitat_maker_app_id\"),\t \"devices\",\t deviceID,\t command\t \t ],\t '/'\t\t) & (\t $exists(parameter) ? (\"/\" & parameter) : \"\"\t) & \"?access_token=\" & $flowContext(\"hubitat_maker_token\")","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":850,"y":1680,"wires":[["222d8cd7.909644","7c6870f.184699"]]},{"id":"c059a9ca.334578","type":"function","z":"e11e5cc9.86044","name":"Set command","func":"switch(msg.attribute) {\n case 'switch':\n msg.command = msg.payload;\n break;\n case 'level':\n msg.command = \"setLevel\";\n msg.parameter = msg.payload;\n break;\n default: \n msg.command = msg.payload;\n break;\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":630,"y":1660,"wires":[["408f680d.db2838"]]},{"id":"7c6870f.184699","type":"http request","z":"e11e5cc9.86044","name":"","method":"GET","ret":"txt","paytoqs":false,"url":"","tls":"","persist":false,"proxy":"","authType":"","x":1240,"y":1600,"wires":[["812fd68d.e00728"]]},{"id":"812fd68d.e00728","type":"debug","z":"e11e5cc9.86044","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":1430,"y":1580,"wires":[]},{"id":"ff37c0f3.be6c8","type":"debug","z":"e11e5cc9.86044","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":677.5,"y":1259,"wires":[]},{"id":"a7744bb3.3151a8","type":"change","z":"e11e5cc9.86044","name":"","rules":[{"t":"set","p":"url","pt":"msg","to":"$join(\t [\t \"http:/\",\t $flowContext(\"hubitat_ip\"),\t \"apps/api\",\t $flowContext(\"hubitat_maker_app_id\"),\t \"devices/all\"\t \t ],\t '/'\t\t) & (\t $exists(parameter) ? (\"/\" & parameter) : \"\"\t) & \"?access_token=\" & $flowContext(\"hubitat_maker_token\")","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":270,"y":1420,"wires":[["4301e260.33336c","71833365.baa83c"]]},{"id":"7508cbf.1f07534","type":"comment","z":"e11e5cc9.86044","name":"Hubitat Integration","info":"Handle listening to event stream, pulling devices to manage from the Maker API and processing commands from MQTT into Maker API calls","x":130,"y":1100,"wires":[]},{"id":"8c19c858.eea4b8","type":"comment","z":"e11e5cc9.86044","name":"Home Assistant Integration","info":"Parse device information and turn it into pushes to MQTT to support Home Assistant's native discovery. Should automatically create devices and entities in Home Assistant for whatever passes through as long as it matches the format. \n\nYou should not need to change the home assistant import config but it's there in case you want to add additional transforms, etc. ","x":130,"y":1740,"wires":[]},{"id":"dd4dd4ac.2c5db8","type":"link in","z":"e11e5cc9.86044","name":"Discovery Input","links":["5eba5b74.300294","6e94c4bb.8eac7c"],"x":175,"y":2000,"wires":[["c8734071.49093","413557a3.3b77d8"]]},{"id":"4d271e39.992d8","type":"split","z":"e11e5cc9.86044","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":430,"y":2020,"wires":[["b87cb250.73e51","5878097f.14a518"]]},{"id":"b87cb250.73e51","type":"change","z":"e11e5cc9.86044","name":"","rules":[{"t":"move","p":"payload","pt":"msg","to":"device","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":570,"y":2060,"wires":[["a8838f5d.78c3c"]]},{"id":"49de54d4.fbd0ac","type":"split","z":"e11e5cc9.86044","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"attributeName","x":570,"y":2360,"wires":[["4fcd7b3b.d6fe94"]]},{"id":"4fcd7b3b.d6fe94","type":"function","z":"e11e5cc9.86044","name":"create home assistant mqtt discovery config message","func":"var config = flow.get('config');\nvar platform = '';\n\n\n//var node_id = msg.device.id + '_' + msg.attributeName;\nvar node_id = msg.req.params.platform + '-' + msg.device.id;\n//var ob_id = msg.device.id + ((['level','switch'].indexOf(msg.attributeName) == -1)? `_${msg.attributeName}` : '');\n//var ob_id = node_id + '_' + msg.attributeName;\nvar ob_id = msg.attributeName;\nvar friendly_name = msg.device.label + ((['level','switch'].indexOf(msg.attributeName) == -1)? ` ${msg.attributeName}` : '');\n\nvar c = {};\n\n\n// Setup base config object with friendly name\nvar e = {\n //\"name\": msg.config.devicePrefix + ' ' + friendly_name,\n \"unique_id\": node_id + '-' + ob_id,\n \"device\": msg.device.config,\n \"name\": friendly_name\n};\n\n//set topic prefix for actual device communication vs the config topic\nvar topicPrefix = [msg.config.mqtt_prefix, msg.req.params.platform, msg.device.id].join('/');\n\n// Add specific settings for the light platform\nif (msg.attributeName == 'level'){\n e.brightness_state_topic= [topicPrefix,'level',msg.config.mqtt_state_suffix].join('/');\n e.brightness_command_topic= [topicPrefix,'level',msg.config.mqtt_cmd_suffix].join('/');\n e.brightness_scale= 99;\n platform = 'light';\n} \n\n// Add specific settings for both light and the switch platform\nif (['level','switch'].indexOf(msg.attributeName) > -1){\n e.command_topic= [topicPrefix,'switch',msg.config.mqtt_cmd_suffix].join('/');\n e.payload_on =\"on\";\n e.payload_off= \"off\";\n e.state_topic = [topicPrefix,'switch',msg.config.mqtt_state_suffix].join('/');\n if (msg.attributeName == 'switch')\n platform = 'switch';\n}\nelse {\n // We're setting up a sensor attribute\n e.state_topic = [topicPrefix,msg.attributeName,msg.config.mqtt_state_suffix].join('/');\n \n // Add specific settings if it matches our binary sensor list\n if(msg.attributeName.match(config.bReg)){\n var binary_lookup = flow.get('config.bLookup');\n Object.assign(e,binary_lookup[msg.attributeName]);\n platform = 'binary_sensor';\n }\n \n // Or Add specific sensors if we match our known sensor type list\n else if(msg.attributeName.match(config.sReg)){\n var sensor_lookup = flow.get('config.sLookup');\n e = Object.assign({},config.sDefaults,sensor_lookup[msg.attributeName],e);\n platform = 'sensor'\n }\n // Or Treat it as a generic sensor\n else {\n platform = 'sensor';\n e = Object.assign({},config.sDefaults,e);\n }\n}\n\n\nvar topic =\n [\n config.ha_prefix,\n platform,\n node_id,\n ob_id,\n 'config'\n ].join('/');\n\n\n\n/*var payload = {\n \"topic\": topic,\n \"content\": e,\n //\"entity\": platform + '.' + ob_id\n \"entity\": platform + '.' + friendly_name.replace(/\\s+/g, '_').replace(/[^A-z0-9\\s]/g,'').toLowerCase()\n};\n*/\n\nmsg.topic = topic;\nmsg.payload = e;\n\nreturn msg;","outputs":1,"noerr":0,"x":760,"y":2460,"wires":[["49047a38.7c9724"]]},{"id":"a8838f5d.78c3c","type":"change","z":"e11e5cc9.86044","name":"Clear Device Split and Prepare to Process Attrs","rules":[{"t":"set","p":"payload","pt":"msg","to":"device.attributes","tot":"msg"},{"t":"delete","p":"parts","pt":"msg"},{"t":"delete","p":"device.attributes","pt":"msg"},{"t":"set","p":"device.config","pt":"msg","to":"{\t\"name\": device.label,\t\"identifiers\": [$join([req.params.platform, device.id], '-')]\t}","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":640,"y":2120,"wires":[["b7c83ea7.9fb6c","20a8709e.847bf"]]},{"id":"5878097f.14a518","type":"debug","z":"e11e5cc9.86044","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":670,"y":1980,"wires":[]},{"id":"c8734071.49093","type":"function","z":"e11e5cc9.86044","name":"Prepare regex","func":"\nvar config = flow.get('config');\n\nconfig.sReg = '^(' + Object.keys(config.sLookup).join('|') + ')$';\nconfig.bReg = '^(' + Object.keys(config.bLookup).join('|') + ')$';\n\n\n//node.log(`binary lookup is: ${JSON.stringify(config.bLookup)}`);\n//node.log(`sensor lookup is: ${JSON.stringify(config.sLookup)} `);\n\n\n\nflow.set('config', config);\n/*\nfunction filterSwitch(t, cur, ind, arr) {\n //var lightFound = arr.some(checkLight);\n //var lightFound = arr.some(x => x.name === 'level');\n var re= new RegExp('(^|,)'+ cur.name+'(?:,|$)');\n\tif ( (cur.name == \"switch\" && arr.some(x => x.name === 'level')) || (processed.includes(cur.name)) || (flow.get('config.blacklist').match(re)) ){\n \t//node.log(`found switch and checklight is true. t= ${JSON.stringify(t)}`);\n \treturn t;\n }\n else {\n processed.push(cur.name);\n return t.concat(cur);\n }\n}\n\n\n\nvar processed = [];\nmsg.payload = msg.device.attributes.reduce(filterSwitch, []); \n\nnode.log('attributes are: '+ JSON.stringify(msg.payload));\n*/\nreturn msg;","outputs":1,"noerr":0,"x":240,"y":2120,"wires":[["4d271e39.992d8"]]},{"id":"413557a3.3b77d8","type":"debug","z":"e11e5cc9.86044","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":410,"y":1920,"wires":[]},{"id":"13d3c936.1760d7","type":"link out","z":"e11e5cc9.86044","name":"","links":["4e67d0c1.fab4b"],"x":1135,"y":2280,"wires":[]},{"id":"49047a38.7c9724","type":"json","z":"e11e5cc9.86044","name":"","property":"payload","action":"str","pretty":false,"x":790,"y":2380,"wires":[["13d3c936.1760d7","d9b2eb1a.f2cf58"]]},{"id":"69059868.3b0698","type":"change","z":"e11e5cc9.86044","name":"Pass current state to MQTT","rules":[{"t":"set","p":"topic","pt":"msg","to":"$join([config.mqtt_prefix, req.params.platform, device.id,attributeName,config.mqtt_state_suffix],'/')","tot":"jsonata"},{"t":"set","p":"retain","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":820,"y":2280,"wires":[["13d3c936.1760d7"]]},{"id":"3dd1183c.6403c8","type":"comment","z":"e11e5cc9.86044","name":"Discovery Processing","info":"Process discovery notifications from the bridge and create new devices","x":100,"y":1960,"wires":[]},{"id":"d9b2eb1a.f2cf58","type":"debug","z":"e11e5cc9.86044","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1090,"y":2360,"wires":[]},{"id":"b7c83ea7.9fb6c","type":"function","z":"e11e5cc9.86044","name":"Dedupe lights and switches and remove blacklisted attributes","func":"\nvar blacklist = flow.get('config.blacklist');\n\nfunction filterSwitch(t, cur, ind, arr) {\n var re= new RegExp('(^|,)'+ cur+'(?:,|$)');\n\tif ( (cur == \"switch\" && arr.some(x => x === 'level')) || blacklist.match(re) ){\n \t//node.log(`found switch and checklight is true. t= ${JSON.stringify(t)}`);\n \tdelete msg.payload[cur];\n \treturn t;\n }\n else {\n return t.concat(cur);\n }\n}\n\n\nObject.keys(msg.payload).reduce(filterSwitch, []); \n\n//node.log('attributes are: '+ JSON.stringify(msg.payload));\n\nreturn msg;","outputs":1,"noerr":0,"x":340,"y":2280,"wires":[["49de54d4.fbd0ac"]]},{"id":"20a8709e.847bf","type":"split","z":"e11e5cc9.86044","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"attributeName","x":630,"y":2220,"wires":[["69059868.3b0698"]]},{"id":"dc120697.07f418","type":"comment","z":"e11e5cc9.86044","name":"Create Home Assistant Discovery MQTT Entries","info":"","x":240,"y":2200,"wires":[]},{"id":"1f0741c8.5b8bfe","type":"comment","z":"e11e5cc9.86044","name":"Pass current states of attributes if we have them","info":"","x":960,"y":2200,"wires":[]},{"id":"71833365.baa83c","type":"debug","z":"e11e5cc9.86044","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":440,"y":1480,"wires":[]},{"id":"12164524.3ed71b","type":"comment","z":"e11e5cc9.86044","name":"","info":"","x":120,"y":40,"wires":[]},{"id":"6286ac8a.9d1ac4","type":"config","z":"e11e5cc9.86044","name":"","properties":[{"p":"config","pt":"flow","to":"{}","tot":"json"},{"p":"config.mqtt_prefix","pt":"flow","to":"homeassistant","tot":"str"},{"p":"config.mqtt_state_suffix","pt":"flow","to":"state","tot":"str"},{"p":"config.mqtt_cmd_suffix","pt":"flow","to":"cmd","tot":"str"},{"p":"hubitat_ip","pt":"flow","to":"10.20.0.22","tot":"str"},{"p":"hubitat_maker_token","pt":"flow","to":"2bd811d5-c44b-4dda-838b-9a05920ea8e8","tot":"str"},{"p":"hubitat_maker_app_id","pt":"flow","to":"6","tot":"str"}],"active":true,"x":130,"y":80,"wires":[]},{"id":"9b8020de.1c6c4","type":"config","z":"e11e5cc9.86044","name":"Home Assistant Import Config","properties":[{"p":"config.blacklist","pt":"flow","to":"DeviceWatch-DeviceStatus,checkInterval,indicatorStatus,dataType,values,lockCodes","tot":"str"},{"p":"config.bLookup","pt":"flow","to":"{\"water\":{\"device_class\":\"moisture\",\"payload_on\":\"wet\",\"payload_off\":\"dry\"},\"smoke\":{\"device_class\":\"smoke\",\"payload_on\":\"detected\",\"payload_off\":\"clear\"},\"motion\":{\"device_class\":\"motion\",\"payload_on\":\"active\",\"payload_off\":\"inactive\"},\"contact\":{\"device_class\":\"opening\",\"payload_on\":\"open\",\"payload_off\":\"closed\"},\"sound\":{\"device_class\":\"sound\",\"payload_on\":\"detected\",\"payload_off\":\"not detected\"},\"tamper\":{\"device_class\":\"vibration\",\"payload_on\":\"detected\",\"payload_off\":\"clear\"},\"carbonMonoxide\":{\"device_class\":\"safety\",\"payload_on\":\"detected\",\"payload_off\":\"clear\"},\"shock\":{\"device_class\":\"safety\",\"payload_on\":\"detected\",\"payload_off\":\"clear\"},\"vibration\":{\"device_class\":\"vibration\",\"payload_on\":\"detected\",\"payload_off\":\"clear\"},\"acceleration\":{\"device_class\":\"moving\",\"payload_on\":\"detected\",\"payload_off\":\"clear\"}}","tot":"json"},{"p":"config.sLookup","pt":"flow","to":"{\"temperature\":{\"unit_of_measurement\":\"°F\"},\"battery\":{\"unit_of_measurement\":\"% B\",\"icon\":\"mdi:battery\"},\"power\":{\"unit_of_measurement\":\"W\"},\"voltage\":{\"unit_of_measurement\":\"V\"},\"humidity\":{\"unit_of_measurement\":\"% H\",\"icon\":\"mdi:water-percent\"},\"energy\":{\"unit_of_measurement\":\"kWh\"},\"illuminance\":{\"unit_of_measurement\":\"lux\",\"icon\":\"mdi:brightness-5\"},\"powerLow\":{\"unit_of_measurement\":\"W\"},\"powerHigh\":{\"unit_of_measurement\":\"W\"},\"current\":{\"unit_of_measurement\":\"A\"},\"currentLow\":{\"unit_of_measurement\":\"A\"},\"currentHigh\":{\"unit_of_measurement\":\"A\"},\"amperage\":{\"unit_of_measurement\":\"A\"}}","tot":"json"},{"p":"config.sDefaults","pt":"flow","to":"{\"force_update\":true}","tot":"json"},{"p":"config.customize","pt":"flow","to":"{}","tot":"json"},{"p":"config.ha_prefix","pt":"flow","to":"homeassistant","tot":"str"},{"p":"config.device_name_prefix","pt":"flow","to":"HE","tot":"str"}],"active":true,"x":190,"y":1840,"wires":[]}]